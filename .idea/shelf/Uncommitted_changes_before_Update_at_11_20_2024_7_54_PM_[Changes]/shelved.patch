Index: database.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/database.js b/src/electron/database.js
rename from database.js
rename to src/electron/database.js
--- a/database.js	(revision da847c2b81e3c539e10d022ece43b58a6254c15e)
+++ b/src/electron/database.js	(date 1732141325141)
@@ -1,7 +1,9 @@
-const sqlite3 = require('sqlite3').verbose();
-const path = require('path');
+import sqlite3 from 'sqlite3'; // ES module import
+import path from 'path';
 
-const dbPath = path.join(__dirname, 'DMS-Project.sqlite');
+const dbPath = path.resolve('DMS-Project.sqlite');
+
+// Open the SQLite database
 const db = new sqlite3.Database(dbPath, (err) => {
     if (err) {
         console.error('Error opening database:', err.message);
@@ -11,7 +13,7 @@
 });
 
 // Function to get players for a specific season with optional player name filtering
-function getPlayersBySeason(season, filter = '') {
+export function getPlayersBySeason(season, filter = '') {
     return new Promise((resolve, reject) => {
         let query = 'SELECT Player, Tm FROM NFL_Player_Stats_1922 WHERE Season = ?';
         let params = [season];
@@ -32,9 +34,8 @@
     });
 }
 
-
 // Function to get stats for a specific player, with sorting and filtering capabilities
-function getPlayerStats(player, sortBy = 'Season', sortOrder = 'ASC', filter = '') {
+export function getPlayerStats(player, sortBy = 'Season', sortOrder = 'ASC', filter = '') {
     return new Promise((resolve, reject) => {
         let query = 'SELECT * FROM NFL_Player_Stats_1922 WHERE Player = ?';
         let params = [player];
@@ -58,7 +59,8 @@
     });
 }
 
-module.exports = {
+// Add this export to enable the default import in main.js
+export default {
     getPlayersBySeason,
     getPlayerStats
-};
\ No newline at end of file
+};
Index: styles.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/styles.css b/src/assets/styles.css
rename from styles.css
rename to src/assets/styles.css
--- a/styles.css	(revision da847c2b81e3c539e10d022ece43b58a6254c15e)
+++ b/src/assets/styles.css	(date 1731869439008)
@@ -1,3 +1,7 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
 .team-grid {
     display: grid;
     grid-template-columns: repeat(auto-fill, minmax(250px, 1fr)); /* Adjusts to screen size */
Index: preload.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/preload.js b/src/electron/preload.js
rename from preload.js
rename to src/electron/preload.js
--- a/preload.js	(revision da847c2b81e3c539e10d022ece43b58a6254c15e)
+++ b/src/electron/preload.js	(date 1732147782507)
@@ -1,5 +1,6 @@
 const { contextBridge, ipcRenderer } = require('electron');
 
+// Expose APIs to the renderer process
 contextBridge.exposeInMainWorld('api', {
     getPlayersBySeason: (season) => ipcRenderer.invoke('get-players-by-season', season),
     getPlayerStats: (player) => ipcRenderer.invoke('get-player-stats', player)
Index: views/About.vue
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/views/About.vue b/src/views/Teams.vue
rename from views/About.vue
rename to src/views/Teams.vue
--- a/views/About.vue	(revision da847c2b81e3c539e10d022ece43b58a6254c15e)
+++ b/src/views/Teams.vue	(date 1731824407036)
@@ -1,12 +1,11 @@
 <template>
   <div>
-    <h1>About Page</h1>
-    <p>This is the About page.</p>
+    <h2>Teams</h2>
+    <p>Team data will go here.</p>
   </div>
 </template>
-
 <script>
 export default {
-  name: 'About'
+  name: 'Teams',
 };
 </script>
